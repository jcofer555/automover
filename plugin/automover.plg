<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN>

<PLUGIN 
  name="automover"
  author="jcofer555"
  version="2025.10.75.5"
  launch="Settings/Automover"
  pluginURL="https://raw.githubusercontent.com/jcofer555/automover/main/plugin/automover.plg"
  support="https://forums.unraid.net/topic/192216-automover-for-unraid/"
  min="7.0.0"
  
  icon="icon.png"
>

<CHANGES>
<![CDATA[

### 2025.10.75.5

- Minor css changes
- Check if mover tuning is installed at install/update and displays warning if it is installed

### 2025.10.75.2

- Fix for disabling unraids mover at reboot if setting is enabled

### 2025.10.75.1

- Fix for disable unraid mover option


For older releases, see https://github.com/jcofer555/automover/releases
]]>
</CHANGES>

<FILE Name="/boot/config/plugins/automover/unraid-automover-2025.10.75.5-noarch-1.txz">
<URL>https://github.com/jcofer555/automover/releases/download/2025.10.75.5/unraid-automover-2025.10.75.5-noarch-1.txz</URL>
<SHA256>3f30ec5dc60e951a9cd91da80d239fe30bfc5ee24e2e9f2f499e2c0a821b21a1</SHA256>
</FILE>

<!--
The 'install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
<![CDATA[
upgradepkg --install-new /boot/config/plugins/automover/unraid-automover-2025.10.75.5-noarch-1.txz

USER_CFG="/boot/config/plugins/automover/settings.cfg"
DEFAULT_CFG="/usr/local/emhttp/plugins/automover/helpers/default_settings.cfg"
TMP_CFG="/tmp/automover_settings.tmp"

# Define the desired key order
ordered_keys=(
    "POOL_NAME"
    "THRESHOLD"
    "INTERVAL"
    "DRY_RUN"
    "ALLOW_DURING_PARITY_CHECK"
    "AUTOSTART"
    "DISABLE_UNRAID_MOVER_SCHEDULE"
    "AGE_BASED_FILTER"
    "AGE_DAYS"
    "SIZE_BASED_FILTER"
    "SIZE_MB"
    "EXCLUSIONS_ENABLED"
)

# If user config doesn't exist, copy the default
if [ ! -f "$USER_CFG" ]; then
    cp "$DEFAULT_CFG" "$USER_CFG"
else
    # Add missing keys from default config
    while IFS='=' read -r key val; do
        [[ -z "$key" || "$key" =~ ^[[:space:]]*# ]] && continue
        if ! grep -q -E "^[[:space:]]*${key}[[:space:]]*=" "$USER_CFG"; then
            echo "$key=$val" >> "$USER_CFG"
        fi
    done < "$DEFAULT_CFG"
fi

# Rebuild config: keep only ordered known keys (remove everything else)
{
    for key in "${ordered_keys[@]}"; do
        grep -E "^[[:space:]]*${key}[[:space:]]*=" "$USER_CFG"
    done
} > "$TMP_CFG"
mv "$TMP_CFG" "$USER_CFG"

SETTINGS="/boot/config/plugins/automover/settings.cfg"
CRON_FILE="/boot/config/plugins/automover/automover.cron"

if [ -e "$SETTINGS" ]; then
    source "$SETTINGS"
fi

# === Check for Mover Tuning plugin ===
MOVER_TUNING="/boot/config/plugins/ca.mover.tuning.plg"
MOVER_TUNING_DIR="/usr/local/emhttp/plugins/ca.mover.tuning"

# Verify using realpath and test existence explicitly
if realpath "$MOVER_TUNING" &>/dev/null || [ -d "$MOVER_TUNING_DIR" ]; then
  if [ -f "$MOVER_TUNING" ] || [ -d "$MOVER_TUNING_DIR" ]; then
    echo "⚠️ Mover Tuning plugin appears to be installed. Having both can result in conflicts between Mover Tuning and Automover. Consider uninstalling one to avoid incompatibility issues."
  fi
fi

# === Disable Unraid mover schedule if requested ===
MOVER="/usr/local/sbin/mover"
MOVER_BACKUP="/usr/local/sbin/mover.automover"
MIN_SIZE=4096

if [ "$DISABLE_UNRAID_MOVER_SCHEDULE" == "yes" ]; then
    # Skip if backup already exists (stay silent)
    if [ -f "$MOVER_BACKUP" ]; then
        :
    else
        if [ -f "$MOVER" ]; then
            mover_size=$(stat -c%s "$MOVER")
            if (( mover_size >= MIN_SIZE )); then
                cp "$MOVER" "$MOVER_BACKUP"
                : > "$MOVER"
                chmod 755 "$MOVER_BACKUP"
                echo "✅ Unraid mover schedule disabled."
            else
                echo "⚠️ Mover tuning is likely installed so schedule was not disabled."
            fi
        else
            echo "⚠️ Mover file not found — unable to disable schedule."
        fi
    fi
fi

# === Cron setup ===
if [ "$AUTOSTART" == "no" ]; then
  rm -f $(ls /boot/config/plugins/automover/unraid-automover-*.txz 2>/dev/null | grep -v '2025.10.75.5')
  rm -f "$CRON_FILE"
  echo ""
  echo "----------------------------------------------------"
  echo " automover has been installed."
  echo " Version: 2025.10.75.5"
  echo "----------------------------------------------------"
  echo ""
else
  INTERVAL=$(grep INTERVAL "$SETTINGS" | cut -d '"' -f2)
  echo "*/$INTERVAL * * * * /usr/local/emhttp/plugins/automover/helpers/automover.sh &> /dev/null 2>&1" > "$CRON_FILE"
  update_cron
  rm -f $(ls /boot/config/plugins/automover/unraid-automover-*.txz 2>/dev/null | grep -v '2025.10.75.5')
  echo ""
  echo "----------------------------------------------------"
  echo " automover has been installed."
  echo " Version: 2025.10.75.5"
  echo "----------------------------------------------------"
  echo ""
fi
]]>
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
<![CDATA[
removepkg unraid-automover

if [[ -f /usr/local/sbin/mover.automover ]]; then
  size=$(stat -c%s /usr/local/sbin/mover.automover)
  if (( size >= 4096 )); then
    rm -f /usr/local/sbin/mover
    cp /usr/local/sbin/mover.automover /usr/local/sbin/mover
  else
    rm -f /usr/local/sbin/mover.automover
    echo "⚠️ The mover.automover file is not the right size so schedule was not restored. Please reboot Unraid to fully re-enable Unraid's mover schedule."
  fi
fi
rm -rf /usr/local/emhttp/plugins/automover
rm -rf /boot/config/plugins/automover
]]>
</INLINE>
</FILE>

</PLUGIN>
